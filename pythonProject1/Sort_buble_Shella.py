# сортировка - пузырьком, вставками и Shella

# 1 пузырьком - сравниваем пары элементов,
# и наименньшее число переносим на лево,
# или же наибольшее число перемещаем на право,
# т.о. наибоьшее число всплывает, поэтому и название такое.


# mass = [5, 7, 4, 3, 8, 2]   # наш список чисел
# n = len(mass)
#
# for j in range(n-1):     # n-1 итераций работы алгоритма
#     for i in range(n-1-j):   # проход оставшимся не отсортированным парам массива
#         print(f"сейчас сравниваем {mass[i]} с {mass[i+1]}")
#         if mass[i] > mass[i + 1]:    # сортировка по увеличению поэтому >
#             mass[i], mass[i + 1] = mass[i + 1], mass[i]
# print(mass)

# сортировка вставками -

# mass1 = [-1, 2, 5, 3, 6, 9, 11, 0, 1, 4]
# n1 = len(mass1)
#
# for i in range(1, n1):
#     for j in range(i, 0, -1):
#         print(f"сейчас сравниваем {mass1[j]} с {mass1[j - 1]}")
#         if mass1[j] < mass1[j-1]:
#             mass1[j],mass1[j-1] = mass1[j-1],mass1[j]
#         else:
#             break
#
# print(mass1)


# сортировкф Шелла - делит список пополам и сравнивает.......

def shell_sort(lst):  # создадим функцию которая принимает массив в качестве параметра
    gap = len(lst) // 2   # переменная отвечающая за диапазон сравнения 2-х элементов

    while gap > 0:  # создаем цикл
        for value in range(gap, len(lst)):  #
            current_value = lst[value]  # присваиваем значение текущего элемента
            position = value    # отвечает за позицию индекса элемента
            # пока значение индекса >= gap и при этом элемент сравниваемый с текущим значением будет больше него
            while position >= gap and lst[position - gap] > current_value:
                lst[position] = lst[position - gap]  # меняем сравниваемые элементы местами
                position -= gap
                lst[position] = current_value

        gap //= 2  # опять пременну делим пополам
    return lst     # возвращает массив

lst = [7, 11, 9, 13, 1, 0, 8, 5, 3, 4, 19, 12, 2, 66, 6, 15]
print("исходный массив:", lst)
result = shell_sort(lst)
print("результат сортировки:", result)


