# a = new Array() - так объявляли массив, в питоне
a = [4, 7, 1, 9, -1] # это список скобки квадратные
print(type(a))
a[3] = 0
# Кортеж имеет круглые скобки. Значения в ячейках не меняются
b = (4, 7, 1, 9, -1)
print(type(b))


c = (4, "AAAVV", 7, 1, 9, -1, 8, 9, 15,)
print(type(c))

d = [4, 3, 1, 6, -4]
print(d[1:3])
d.append(5)   # добавляет значение в конец списка
print(d)
d.sort()  # сортировка
print(d)
# d.sort(reverse = True)  # переворачивает сортировку
e = d.index(3)
print(d)
d.remove(1)
print(d)
print(len(d))   # длина списка, количество символов
 # дописать все эти свойства


# Словари - конструкция, где ячейка состоит из ключа и значения, ключи повторяться не могут
a = {'Война и мир': 'Толстой', 'Му-Му': 'Тургенев', 'Воскресенье': 'Толстой'}
print(a['Му-Му'])
print(a.get('Му-Му')) #
print(a)
print(a.keys())  #
print(a.items())  #
a.update({'Мы': 'Замятин'}) #
print(a)

# матрицы представляются как список списков, можно в каждую строку добавлять разное количество символов
m = [[2, 5, 2], [5, 6, 1], [6, 9, 7]]
print(m)
print(m[0][2])


# множества
z = {5, 3, 7, 8, 9, 6}
y = {6, 7, 8, 3, 4, 1, 2}
print(z)
print(type(z))
z.add(4) # одно значение добавим
print(z)
z.update([11, 12, 15])  # добавляем несколько значений
print(z)
z.pop() # удаление
print(z)
z.discard(5) # удаление по значению, но если такого нет то ошибки не будет
print(z)
z.remove(9) # удалеие по значению
print(z)

# получение общего числа двух множеств print(z.union(y))  print(z | y ),
# пример с кругами
print(z.union(y))
print(z | y)

print(z & y)

print(z.intersection(y))

print(z - y) # вычли из одного другое, можно и наоборот буквы
# разность
print(z.difference(y)) # и наоборот тоже можно

# можно использовать циклы
for c in z:
    print(c)

print(6 in z)  # ответ будет true, in говорит о том что в чем то ищут
print(16 not in z) # спрашиваем - а нет ли 16 в этом множестве

# явное приведение типов
a = {5, 6, 7, 9, 11, 4}   #
b = list(a)
print(type(b))
print(b)
n = tuple(a)
print(n)
l = dict(keys=a)   # любое слово можно применить
print(type(l))
print(l)

w = [5, 6, 7, 9, 11, 4]    # список
h = ['F', 'f', 'l', 'd']
newDc = {}
for u in range(len(w)):
    newDc.update({w[u]: h[u]})

print(newDc)
# не работает